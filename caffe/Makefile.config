## Refer to http://caffe.berkeleyvision.org/installation.html
# Contributions simplifying and improving our build system are welcome!

# CUDA directory contains bin/ and lib/ directories that we need.
#CUDA_DIR := /usr/local/cuda
CUDA_DIR := /Developer/NVIDIA/CUDA-7.0/

# CUDA architecture setting: going with all of them.
CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
		-gencode arch=compute_20,code=sm_21 \
		-gencode arch=compute_30,code=sm_30 \
		-gencode arch=compute_35,code=sm_35

# BLAS choice:
# atlas for ATLAS (default)
# mkl for MKL
# open for OpenBlas
BLAS := atlas
#BLAS := mkl

# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.
# Leave commented to accept the defaults for your choice of BLAS
# (which should work)!
# BLAS_INCLUDE := /path/to/your/blas
# BLAS_LIB := /path/to/your/blas

# This is required only if you will compile the matlab interface.
# MATLAB directory should contain the mex binary in /bin.
# MATLAB_DIR := /usr/local
MATLAB_DIR := /Applications/MATLAB_R2013a.app

# NOTE: this is required only if you will compile the python interface.
# We need to be able to find Python.h and numpy/arrayobject.h.
#PYTHON_INCLUDE := /usr/local/include/python2.7 \
#		/usr/local/lib/python2.7/site-packages/numpy/core/include

# Anaconda Python distribution is quite popular. Include path:
PYTHON_INCLUDE := $(HOME)/anaconda/include \
		 $(HOME)/anaconda/include/python2.7 \
		 $(HOME)/anaconda/lib/python2.7/site-packages/numpy/core/include 

#/usr/include/python2.7/


#$(HOME)/anaconda/pkgs/python-2.7.7-0/include/python2.7


# We need to be able to find libpythonX.X.so or .dylib.
#PYTHON_LIB := /usr/local/lib
PYTHON_LIB := $(HOME)/anaconda/lib

#Boost Lib and Includes

BOOST_INCLUDES := /usr/local/Cellar/boost/1.55.0_2/include/
BOOST_LIB := /usr/local/Cellar/boost/1.55.0_2/lib

#GLOG Lib and Includes

GLOG_INCLUDES := /usr/local/Cellar/glog/0.3.4/include
GLOG_LIB := /usr/local/Cellar/glog/0.3.4/lib

#OpenCV Lib and Includes

OPENCV_INCLUDES := /usr/local/Cellar/opencv/2.4.9/include
OPENCV_LIB := /usr/local/Cellar/opencv/2.4.9/lib

#LEVELDB

LEVELDB_INCLUDES := /usr/local/Cellar/leveldb/1.18/include
LEVELDB_LIB := /usr/local/Cellar/leveldb/1.18/lib

#Snappy

SNAPPY_INCLUDES := /usr/local/Cellar/snappy/1.1.3/include
SNAPPY_LIB := /usr/local/Cellar/snappy/1.1.3/lib

#Protobuf

PROTOBUF_INCLUDES := /usr/local/Cellar/protobuf/2.6.1/include
PROTOBUF_LIB := /usr/local/Cellar/protobuf/2.6.1/lib

#hdf5

HDF5_INCLUDES := /usr/local/Cellar/hdf5/1.8.13/include
HDF5_LIB := /usr/local/Cellar/hdf5/1.8.13/lib

#cuda

CUDA_INCLUDES := /Developer/NVIDIA/CUDA-7.0/include


# Whatever else you find you need goes here.
#INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include
#LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib

# Whatever else you find you need goes here.

#INCLUDE_DIRS := $(BOOST_INCLUDES) $(HDF5_INCLUDES) $(PROTOBUF_INCLUDES)  $(SNAPPY_INCLUDES)  $(LEVELDB_INCLUDES)  $(OPENCV_INCLUDES) $(GLOG_INCLUDES) $(PYTHON_INCLUDE) /usr/local/include /usr/include/python2.7/

#LIBRARY_DIRS := $(BOOST_LIB) $(HDF5_LIB) $(PROTOBUF_LIB)  $(SNAPPY_LIB)  $(LEVELDB_LIB)  $(OPENCV_LIB)  $(GLOG_LIB) $(PYTHON_LIB) /usr/lib /usr/local/lib 

INCLUDE_DIRS := $(BOOST_INCLUDES) $(HDF5_INCLUDES) $(PROTOBUF_INCLUDES)  $(SNAPPY_INCLUDES)  $(LEVELDB_INCLUDES)  $(OPENCV_INCLUDES) $(GLOG_INCLUDES) $(PYTHON_INCLUDE) $(CUDA_INCLUDES) /usr/local/include /usr/include/python2.7/


#/Users/Gedas/anaconda/pkgs/python-2.7.7-0/include/python2.7


#/usr/include/python2.7

LIBRARY_DIRS :=  $(HDF5_LIB) $(PROTOBUF_LIB)  $(SNAPPY_LIB)  $(LEVELDB_LIB)  $(OPENCV_LIB)  $(GLOG_LIB) $(PYTHON_LIB) /usr/lib /usr/local/lib 

CXX := /usr/bin/clang++
CXXFLAGS := -stdlib=libstdc++

BUILD_DIR := build
DISTRIBUTE_DIR := distribute

# Uncomment for debugging.
# DEBUG := 1

# The ID of the GPU that 'make runtest' will use to run unit tests.
TEST_GPUID := 0
